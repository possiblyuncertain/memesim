// TODO: Separate into multiple files? (theme, layout, elements, ...)

:root {
  // basic theme colours
  --white: #eee;
  --light-blue: #aae;
  --gray: #555;
  --dark-gray: #333;
  --light-gray: #777;

  // semantic colours
  --neutral: var(--light-gray);
  --bright: var(--white);
  --shadow: var(--gray);
  --dark: var(--dark-gray);
  --highlight: var(--light-blue);

  // derived colours (pre-processed)
  --muted: #bbb;// darken(var(--bright), 20%); TODO
  --deep: #222;//darken(var(--dark-gray), 20%); TODO

  // layers
  --overlay-layer: 100;
  --popup-layer: 200;
  --alert-layer: 300;
}

.flex-across {
  display: flex;
  flex-flow: row nowrap;
  justify-content: left;
  align-items: center;

  .item {
    margin-left: 20px;

    &:first-child {
      margin-left: 0px;
    }
  }
}

.no-padding {
  padding: 0px;
}

.centered {
  margin: auto;
}

// Elements

// Setting a background value destroys default button styling, need to set:
button {
  background-color: var(--white);
  color: black;
  border: none;
  padding: 5px;
  margin: 1px;
  border-radius: 5px;
}

.button-clickable {
  box-shadow: 0px 8px var(--shadow);
  margin-bottom: 10px;

  &:active {
    box-shadow: 0px 4px var(--shadow);
    transform: translate(0, 5px);
  }
}

.control-button {
  @extend .button-clickable;
  width: 70px;
}

.overlay {
  position: relative;

  * {
    z-index: var(--overlay-layer);
    position: absolute;
  }

  .top-right {
    top: 10%;
    right: 10%;
  }
}

.button-small {
  min-width: 40px;
}

.value-box {
  display: inline-block;
  text-align: right;
  min-width: 6ch;
  border: 1px solid var(--bright);
  padding: 0px 5px;
}


// Effects

@keyframes flickering {
  0% {
    opacity: 100%;
  }
  100% {
    opacity: 0%;
  }
}
.pulse {
  background-image: radial-gradient(#0000, var(--highlight));
  position: relative;
  z-index: 1;

  &::before {
    position: absolute;
    content: "";
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: -1;
    background-color: inherit;
    border-radius: inherit;

    animation: flickering 0.5s ease-in infinite alternate;
  }
}

@keyframes hopping {
  from {
    transform: translate(0px, -5px);
  }
  to {
  }
}
.hop {
  animation: hopping 0.2s ease-out alternate;
}
